name: CI
on: [push]
jobs:


  build-and-dkr:
    runs-on: ubuntu-latest

    steps:
    - name: rm -rf /opt
      run: sudo rm -rf /opt

    - uses: actions/checkout@v2
    - name: env/setup
      run: env/setup-git.sh
    - name: git submodule status
      id: git-submodule-status
      run: echo "::set-output name=hash::$(git submodule status | sed -e 's/^.\([^ ]*\) \([^ ]*\).*/\2 \1/' | LANG=C sort | openssl sha1 -binary | xxd -p -c20)"
    - uses: actions/cache@v2
      with:
        path: .git/modules
        key: git-modules-${{ steps.git-submodule-status.outputs.hash }}
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Android .apk
      run: cd app-android && env/docker.sh -j3


  build-lnx-dkr:
    runs-on: ubuntu-latest

    steps:
    - name: rm -rf /opt
      run: sudo rm -rf /opt

    - uses: actions/checkout@v2
    - name: env/setup
      run: env/setup-git.sh
    - name: git submodule status
      id: git-submodule-status
      run: echo "::set-output name=hash::$(git submodule status | sed -e 's/^.\([^ ]*\) \([^ ]*\).*/\2 \1/' | LANG=C sort | openssl sha1 -binary | xxd -p -c20)"
    - uses: actions/cache@v2
      with:
        path: .git/modules
        key: git-modules-${{ steps.git-submodule-status.outputs.hash }}
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Linux server
      run: cd srv-shared && env/docker.sh -j3


  build-lnx-bld:
    runs-on: ubuntu-latest

    steps:
    - name: rm -rf /opt
      run: sudo rm -rf /opt

    - uses: actions/checkout@v2

    - name: make Linux server
      run: docker build --build-arg GIT_REPOSITORY=https://github.com/${{ github.repository }}.git --build-arg GIT_COMMIT=${{ github.sha }} --build-arg GIT_SETUP=env/setup-git.sh -t orchidd:latest srv-docker
    - name: docker save
      run: docker save -o orchidd.tar orchidd:latest
    - uses: actions/upload-artifact@v1
      with:
        name: orchidd-dkr
        path: orchidd.tar


